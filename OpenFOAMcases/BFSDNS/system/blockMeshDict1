/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

Li       -30.0;
Lx       20.0;
H       1.0;
H2      #eval{ 2*$H };
Hm      #eval{ -1*$H };
H2m     #eval{ -2*$H };
W       #eval{ 2*pi() };

vertices
(
    (    0   $H2m  $W) // 0
    (    1   $H2m  $W) // 1
    (  $Lx   $H2m  $W) // 2
    (    0   $Hm   $W) // 3
    (    1   $Hm   $W) // 4
    (  $Lx   $Hm   $W) // 5
    (  $Li   0     $W) // 6
    (    0   0     $W) // 7
    (    1   0     $W) // 8
    (  $Lx   0     $W) // 9
    (  $Li   $H    $W) // 10
    (    0   $H    $W) // 11
    (    1   $H    $W) // 12
    (  $Lx   $H    $W) // 13
    (  $Li   $H2   $W) // 14
    (    0   $H2   $W) // 15
    (    1   $H2   $W) // 16
    (  $Lx   $H2   $W) // 17


    (    0   $H2m  0) // 18
    (    1   $H2m  0) // 19
    (  $Lx   $H2m  0) // 20
    (    0   $Hm   0) // 21
    (    1   $Hm   0) // 22
    (  $Lx   $Hm   0) // 23
    (  $Li   0     0) // 24
    (    0   0     0) // 25
    (    1   0     0) // 26
    (  $Lx   0     0) // 27
    (  $Li   $H    0) // 28
    (    0   $H    0) // 29
    (    1   $H    0) // 30
    (  $Lx   $H    0) // 31
    (  $Li   $H2   0) // 32
    (    0   $H2   0) // 33
    (    1   $H2   0) // 34
    (  $Lx   $H2   0) // 35
);

ySpacing1 (
    (0.3 40 20)
    (0.7 30 1 )
);
ySpacing2 (
    (0.7 30 1   )
    (0.3 40 0.05)
);

blocks
(

    hex (18 19 22 21  0  1  4  3)
    (70 70 192)
    simpleGrading ($ySpacing1 $ySpacing1 1)

    hex (19 20 23 22  1  2  5  4)
    (240 70 192)
    simpleGrading (1 $ySpacing1 1)

    hex (21 22 26 25  3  4  8  7)
    (70 43 192)
    simpleGrading ($ySpacing1 1 1)

    hex (22 23 27 26  4  5  9  8)
    (240 43 192)
    simpleGrading (1 1 1)

    hex (24 25 29 28  6  7 11 10)
    (360 70 192)
    simpleGrading (1 $ySpacing1 1)

    hex (25 26 30 29  7  8 12 11)
    (70 70 192)
    edgeGrading ($ySpacing1 1 1 $ySpacing1   $ySpacing1  1 1 $ySpacing1  1 1 1 1)

    hex (26 27 31 30  8  9 13 12)
    (240 70 192)
    simpleGrading (1 1 1)

    hex (28 29 33 32 10 11 15 14)
    (360 70 192)
    simpleGrading (1 $ySpacing2 1)

    hex (29 30 34 33 11 12 16 15)
    (70 70 192)
    simpleGrading (1 $ySpacing2 1)

    hex (30 31 35 34 12 13 17 16)
    (240 70 192)
    simpleGrading (1 $ySpacing2 1)



);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (28 24  6 10)
            (32 28 10 14)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (20 23  5  2)
            (23 27  9  5)
            (27 31 13  9)
            (31 35 17 13)
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            (33 32 14 15)
            (34 33 15 16)
            (35 34 16 17)
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (24 25 7 6)
            (25 21 3 7)
            (21 18 0 3)
            (18 19 1 0)
            (19 20 2 1)
        );
    }
    front
    {
        type            cyclic;
        neighbourPatch  back;
        faces
        (
            (0 1 4 3)
            (1 2 5 4)
            (3 4 8 7)
            (4 5 9 8)
            (6 7 11 10)
            (7 8 12 11)
            (8 9 13 12)
            (10 11 15 14)
            (11 12 16 15)
            (12 13 17 16)
        );
    }
    back
    {
        type            cyclic;
        neighbourPatch  front;
        faces
        (
            (19 18 21 22)
            (20 19 22 23)
            (22 21 25 26)
            (23 22 26 27)
            (25 24 28 29)
            (26 25 29 30)
            (27 26 30 31)
            (29 28 32 33)
            (30 29 33 34)
            (31 30 34 35)
        );
    }
);


// ************************************************************************* //
